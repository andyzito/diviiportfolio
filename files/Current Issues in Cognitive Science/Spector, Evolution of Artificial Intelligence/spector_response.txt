I have already had some exposure to the idea of evolutionary computing. I am taking two computer sciences classes with Lee Spector, and he loves to talk about this particular field, which is clearly his central interest. Before reading his article for this class, I must admit that I was somewhat skeptical regarding the idea of evolving artificial intelligence. However, his simple argument has utterly convinced me: evolution worked once (in fact, is the only thing that has ever worked) to create intelligence; why shouldn't it work again? 

But obviously we do not yet HAVE artificial intelligences, so what are the obstacles facing evolutionary computing? Since we're letting "natural" selection do the work of "designing" the intelligence, some obstacles are removed -- we don't really need a full understanding of how intelligence works, or how to build it. However, we DO need to create a digital environment and evolution system that is complex enough for intelligence to evolve. Making a system of genetic mutation in a program is not a simple task. Are we simply to have each iteration of a given AI replace random characters in it's code? Only a small fraction of such changes would result in anything but an error; and only a small fraction of those would be an improvement on previous generations. Not to mention the fact that this method would produce staggeringly massive numbers of mutations. Perhaps we could split up our code into chunks, which are randomly replaced to create mutations. In any case, it is clear that this is one of the major challenges to overcome in terms of creating an evolved artificial intelligence.

The second problem is one of practically. Even simple evolutionary computation requires a fair amount of computer resources, not to mention something as intensive as trying to create a full-blown human-level intelligence. Some advances in hardware will be necessary before such a fete is even possible. Fortunately, this obstacle shrinks along with the physical size of our computers.